---
import { t } from "@config";
import { Icon } from "astro-icon/components";
import Card from "@/components/temple/Card.astro";
import { Image } from "astro:assets";
import type { PostData } from "@interfaces/data";

export interface MainCardProps extends PostData {
  infoIcon?: string; // Icon for the info button
  helpText?: string; // Custom help text (defaults to "Learn More")
  textOverlay?: string; // Text to overlay on background when no image
  showTextBackground?: boolean; // Show text background when no image
  headerClass?: string; // Additional classes for the header
  extraClasses?: string; // Additional classes for the whole card
}

const {
  title,
  description,
  image,
  infoIcon = "lucide:help-circle",
  helpText = t("label.learnMore"),
  textOverlay,
  showTextBackground = true,
  headerClass = "",
  extraClasses = "",
} = Astro.props as MainCardProps;

// Create a more descriptive label for the button
const accessibleHelpText = `${helpText}: ${title}`;
---

<Card class={`overflow-hidden ${extraClasses}`}>
  {
    image ? (
      // With image - show image with overlay title
      <div class="relative">
        <div class="aspect-video w-full overflow-hidden">
          <Image
            src={image}
            alt={title}
            width={1200}
            height={630}
            format="webp"
            loading="eager"
            class="w-full h-full object-cover"
          />
        </div>

        {/* Flex container for Title and Button */}
        <div class="absolute bottom-4 left-4 right-4 lg:bottom-6 lg:left-6 lg:right-6 flex items-end justify-between gap-4">
          {/* Title */}
          <div class="inline-block bg-black/60 backdrop-blur-md px-4 py-2 rounded-xl border border-white/40 shadow-lg">
            <h1 class="text-xl sm:text-2xl lg:text-4xl font-bold text-white">{title}</h1>
          </div>

          {/* Description Button */}
          {description && (
            <div class="flex-shrink-0">
              <details class="dropdown-info">
                <summary
                  aria-label={accessibleHelpText}
                  class="btn btn-sm px-3 bg-black/60 backdrop-blur-md hover:bg-black/80 border border-white/40 text-white shadow-lg rounded-full flex items-center gap-2 transition-colors duration-300 ease-in-out"
                >
                  <Icon name={infoIcon} class="w-4 h-4 flex-shrink-0" />
                  <span class="text-xs whitespace-nowrap">{helpText}</span>
                </summary>
                <div class="dropdown-panel z-[1] w-64 sm:w-80 p-3 bg-black/70 backdrop-blur-md text-white border border-white/20 rounded-xl shadow-lg">
                  <p class="text-sm">{description}</p>
                </div>
              </details>
            </div>
          )}
        </div>
      </div>
    ) : textOverlay ? (
      // No image, but with textOverlay - show gradient background with overlay text
      <div class="relative">
        <div class={`aspect-video w-full overflow-hidden bg-gradient-to-br from-base-300 to-base-100 ${headerClass}`}>
          {showTextBackground && textOverlay && (
            <div class="absolute inset-0 w-full h-full error-animation-container">
              <div class="text-9xl md:text-[12rem] font-bold text-primary opacity-20 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2">
                {textOverlay}
              </div>
            </div>
          )}
        </div>

        {/* Flex container for Title and Button */}
        <div class="absolute bottom-4 left-4 right-4 lg:bottom-6 lg:left-6 lg:right-6 flex items-end justify-between gap-4">
          {/* Title */}
          <div class="inline-block bg-black/60 backdrop-blur-md px-4 py-2 rounded-xl border border-white/40 shadow-lg">
            <h1 class="text-xl sm:text-2xl lg:text-4xl font-bold text-white">{title}</h1>
          </div>

          {/* Description Button */}
          {description && (
            <div class="flex-shrink-0">
              <details class="dropdown-info">
                <summary
                  aria-label={accessibleHelpText}
                  class="btn btn-sm px-3 bg-black/60 backdrop-blur-md hover:bg-black/80 border border-white/40 text-white shadow-lg rounded-full flex items-center gap-2 transition-colors duration-300 ease-in-out"
                >
                  <Icon name={infoIcon} class="w-4 h-4 flex-shrink-0" />
                  <span class="text-xs whitespace-nowrap">{helpText}</span>
                </summary>
                <div class="dropdown-panel z-[1] w-64 sm:w-80 p-3 bg-black/70 backdrop-blur-md text-white border border-white/20 rounded-xl shadow-lg">
                  <p class="text-sm">{description}</p>
                </div>
              </details>
            </div>
          )}
        </div>
      </div>
    ) : (
      // No image, no textOverlay - show simple title and description at top
      <div class="pt-6 px-6">
        <h1 class="text-xl sm:text-2xl lg:text-4xl font-bold">{title}</h1>
        {description && <p class="mt-2 text-sm text-base-content/80">{description}</p>}
      </div>
    )
  }

  <!-- Content section -->
  <div class="p-4 sm:p-6">
    <slot />
  </div>
</Card>

<style>
  .dropdown-info {
    position: relative;
    display: inline-flex;
  }

  .dropdown-info summary {
    list-style: none;
    cursor: pointer;
  }

  .dropdown-info summary::marker,
  .dropdown-info summary::-webkit-details-marker {
    display: none;
  }

  .dropdown-info summary:focus-visible {
    outline: 2px solid rgba(255, 255, 255, 0.4);
    outline-offset: 2px;
  }

  .dropdown-panel {
    position: absolute;
    bottom: calc(100% + 1rem);
    right: 0;
    transform-origin: top right;
    transform: scale(0.95);
    opacity: 0;
    pointer-events: none;
    transition:
      opacity 150ms ease,
      transform 150ms ease;
  }

  .dropdown-info[open] .dropdown-panel {
    opacity: 1;
    transform: scale(1);
    pointer-events: auto;
  }
</style>
