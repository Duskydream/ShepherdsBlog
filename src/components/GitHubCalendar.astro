---
export interface Props {
  username: string;
}

const { username } = Astro.props;

let contributions: any[] = [];
let totalContributions = 0;
let error: string | null = null;

try {
  // 使用另一个API - ghchart.rshah.org的数据源
  const response = await fetch(`https://github-contributions-api.jogruber.de/v4/${username}?y=last`);
  if (response.ok) {
    const data = await response.json();
    console.log("GitHub API Response:", data); // 调试用

    // API返回的数据结构可能是: { contributions: [...], total: {...} }
    if (data.contributions && Array.isArray(data.contributions)) {
      contributions = data.contributions;
      // 计算总贡献数
      totalContributions = contributions.reduce((sum: number, day: any) => sum + (day.count || 0), 0);
    } else {
      error = "Invalid data format";
    }
  } else {
    error = "Failed to load contributions";
  }
} catch (e) {
  error = "Failed to fetch data";
  console.error("GitHub Calendar Error:", e);
}

const weeks: any[] = [];

if (contributions.length > 0) {
  let currentWeek: any[] = [];
  // 取最近一年的数据（大约371天，53周）
  const recentContributions = contributions.slice(-371);

  recentContributions.forEach((day: any) => {
    if (currentWeek.length === 7) {
      weeks.push(currentWeek);
      currentWeek = [];
    }
    currentWeek.push(day);
  });
  if (currentWeek.length > 0) {
    weeks.push(currentWeek);
  }
}

function getLevel(count: number): number {
  if (count === 0) return 0;
  if (count <= 3) return 1;
  if (count <= 6) return 2;
  if (count <= 9) return 3;
  return 4;
}

const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
---

<div class="github-calendar-simple">
  {
    error ? (
      <div class="error-message">
        <p>{error}</p>
        <p class="text-sm">Showing placeholder data</p>
      </div>
    ) : (
      <div class="contributions-info">
        <span class="font-semibold">{totalContributions}</span> contributions in the last year
        {contributions.length > 0 && (
          <span class="text-xs text-base-content/50 ml-2">
            ({contributions[contributions.length - 1]?.date || "Loading..."})
          </span>
        )}
      </div>
    )
  }

  <div class="calendar-graph">
    <div class="months">
      {
        months.map((month, i) => (
          <span class="month-label" style={`grid-column: ${Math.floor(i * 4.3) + 1}`}>
            {month}
          </span>
        ))
      }
    </div>

    <div class="calendar-grid">
      <div class="days-labels">
        <span></span>
        <span>Mon</span>
        <span></span>
        <span>Wed</span>
        <span></span>
        <span>Fri</span>
        <span></span>
      </div>

      <div class="weeks">
        {
          weeks.length > 0
            ? weeks.map((week: any) => (
                <div class="week">
                  {week.map((day: any) => (
                    <div
                      class="day"
                      data-level={getLevel(day.count)}
                      title={`${day.count} contributions on ${day.date}`}
                    />
                  ))}
                </div>
              ))
            : Array.from({ length: 53 }).map((_, i) => (
                <div class="week">
                  {Array.from({ length: 7 }).map((_, j) => (
                    <div class="day" data-level={Math.floor(Math.random() * 5)} />
                  ))}
                </div>
              ))
        }
      </div>
    </div>
  </div>

  <div class="legend">
    <span class="legend-text">Less</span>
    <div class="legend-squares">
      <div class="day" data-level="0"></div>
      <div class="day" data-level="1"></div>
      <div class="day" data-level="2"></div>
      <div class="day" data-level="3"></div>
      <div class="day" data-level="4"></div>
    </div>
    <span class="legend-text">More</span>
  </div>

  <div class="footer-link">
    <a href={`https://github.com/${username}`} target="_blank" rel="noopener noreferrer"> View on GitHub </a>
  </div>
</div>

<style>
  .github-calendar-simple {
    @apply bg-base-200 rounded-xl p-6;
  }

  .error-message {
    @apply text-center text-warning mb-4 text-sm;
  }

  .contributions-info {
    @apply text-sm text-base-content/70 mb-4;
  }

  .calendar-graph {
    @apply overflow-x-auto pb-2;
  }

  .months {
    @apply grid mb-2;
    grid-template-columns: repeat(53, 11px);
    gap: 3px;
  }

  .month-label {
    @apply text-xs text-base-content/60;
    font-size: 10px;
  }

  .calendar-grid {
    @apply flex gap-3;
  }

  .days-labels {
    @apply flex flex-col gap-[3px] text-xs text-base-content/60 pr-2;
    font-size: 9px;
  }

  .days-labels span {
    height: 11px;
    line-height: 11px;
  }

  .weeks {
    @apply flex gap-[3px];
  }

  .week {
    @apply flex flex-col gap-[3px];
  }

  .day {
    width: 11px;
    height: 11px;
    @apply rounded-sm cursor-pointer transition-all;
  }

  .day:hover {
    @apply ring-1 ring-base-content/30;
    transform: scale(1.2);
  }

  html:not(.dark) .day[data-level="0"] {
    background-color: #ebedf0;
  }
  html:not(.dark) .day[data-level="1"] {
    background-color: #ffcdd2;
  }
  html:not(.dark) .day[data-level="2"] {
    background-color: #ef5350;
  }
  html:not(.dark) .day[data-level="3"] {
    background-color: #e53935;
  }
  html:not(.dark) .day[data-level="4"] {
    background-color: #c62828;
  }

  html.dark .day[data-level="0"] {
    background-color: #161b22;
  }
  html.dark .day[data-level="1"] {
    background-color: #5c1a1a;
  }
  html.dark .day[data-level="2"] {
    background-color: #8b2525;
  }
  html.dark .day[data-level="3"] {
    background-color: #c62828;
  }
  html.dark .day[data-level="4"] {
    background-color: #ff5252;
  }

  .legend {
    @apply flex items-center gap-2 mt-4 text-xs text-base-content/60;
  }

  .legend-text {
    @apply text-xs;
  }

  .legend-squares {
    @apply flex gap-1;
  }

  .legend-squares .day {
    @apply cursor-default;
  }

  .legend-squares .day:hover {
    @apply ring-0;
    transform: none;
  }

  .footer-link {
    @apply mt-4 text-center;
  }

  .footer-link a {
    @apply text-sm text-primary hover:underline;
  }

  @media (max-width: 768px) {
    .calendar-graph {
      @apply -mx-2;
    }

    .months {
      grid-template-columns: repeat(53, 10px);
      gap: 2px;
    }

    .week {
      gap: 2px;
    }

    .weeks {
      gap: 2px;
    }

    .day {
      width: 10px;
      height: 10px;
    }
  }
</style>
