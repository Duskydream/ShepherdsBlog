<canvas id="shooting-stars" class="absolute inset-0 pointer-events-none z-10"></canvas>

<style>
  #shooting-stars {
    width: 100%;
    height: 100%;
    display: block;
  }
  /* 只在夜间模式显示 */
  html[data-theme-type="light"] #shooting-stars {
    display: none;
  }
</style>

<script is:inline>
  const canvas = document.getElementById("shooting-stars");
  const ctx = canvas.getContext("2d");

  function resize() {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  }
  resize();
  window.addEventListener("resize", resize);

  class ShootingStar {
    constructor() {
      this.reset();
    }
    reset() {
      this.x = Math.random() * canvas.width;
      this.y = Math.random() * canvas.height * 0.5;
      this.len = Math.random() * 80 + 50;
      this.speed = Math.random() * 10 + 6;
      this.size = Math.random() * 2 + 1;
      this.angle = Math.PI / 4;
      this.opacity = 1;
    }
    update() {
      this.x += Math.cos(this.angle) * this.speed;
      this.y += Math.sin(this.angle) * this.speed;
      this.opacity -= 0.02;
      if (this.opacity <= 0) this.reset();
    }
    draw() {
      ctx.beginPath();
      const grad = ctx.createLinearGradient(this.x, this.y, this.x - this.len, this.y - this.len);
      grad.addColorStop(0, `rgba(255,255,255,${this.opacity})`);
      grad.addColorStop(1, "transparent");
      ctx.strokeStyle = grad;
      ctx.lineWidth = this.size;
      ctx.moveTo(this.x, this.y);
      ctx.lineTo(this.x - this.len, this.y - this.len);
      ctx.stroke();
    }
  }

  const stars = Array.from({ length: 6 }, () => new ShootingStar());

  function animate() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    stars.forEach((star) => {
      star.update();
      star.draw();
    });
    requestAnimationFrame(animate);
  }
  animate();
</script>
