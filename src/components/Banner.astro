---
const { src, alt = "", title = "", subtitle = "", class: extraClass = "" } = Astro.props;
import ShootingStars from "@components/Shootingstars.astro";
---

<section class={`banner relative w-full flex items-center justify-center text-center overflow-hidden ${extraClass}`}>
  <!-- 背景固定，占满屏幕 -->
  <div class="absolute inset-0">
    <img src={src} alt={alt} class="banner-img w-full h-full object-cover fixed top-0 left-0" />
  </div>

  <!-- Banner 文字 -->
  <div class="relative z-20 text-white px-4">
    <h1 id="banner-title" class="text-3xl md:text-5xl font-bold text-white drop-shadow-2xl" data-title={title}>
      {title}
    </h1>
    {
      subtitle && (
        <p id="banner-subtitle" class="mt-2 text-lg md:text-2xl text-white drop-shadow-xl" data-subtitle={subtitle}>
          {subtitle}
        </p>
      )
    }
  </div>

  <!-- 流星效果 -->
  <ShootingStars />
</section>

<style>
  html[data-theme-type="dark"] .banner-img {
    filter: brightness(0.3) contrast(1.1) !important;
    transition: filter 0.5s ease;
  }
</style>

<script>
  // 打字机效果
  if (typeof document !== "undefined" && "bannerData" in window) {
    setTimeout(() => {
      const bannerData = (window as any).bannerData || {};
      const titleText = bannerData.title || "";
      const subtitleText = (window as any).bannerData?.subtitle || "";

      function typeWriter(element: HTMLElement, text: string, speed: number = 100, callback?: () => void) {
        let i = 0;
        element.classList.add("cursor");

        function typing() {
          if (i < text.length) {
            element.innerHTML = text.substring(0, i + 1);
            i++;
            setTimeout(typing, speed);
          } else {
            element.classList.remove("cursor");
            if (callback) callback();
          }
        }

        element.innerHTML = "";
        typing();
      }

      const titleEl = document.getElementById("banner-title");
      const subtitleEl = document.getElementById("banner-subtitle");

      if (titleEl)
        typeWriter(titleEl, titleText, 100, () => {
          if (subtitleEl && subtitleText) typeWriter(subtitleEl, subtitleText, 80);
        });
    }, 300);
  }
</script>
