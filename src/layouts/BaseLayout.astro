---
import { SITE_TAB, SITE_DESCRIPTION, SITE_FAVICON, SITE_LANGUAGE, SITE_THEME } from "@config";
import { ClientRouter } from "astro:transitions";
import ElementCrossing from "astro-vtbot/components/ElementCrossing.astro";
import PointerOnNavigation from "astro-vtbot/components/PointerOnNavigation.astro";
import Header from "@components/Header.astro";
import Sidebar from "@components/Sidebar.astro";
import Footer from "@components/Footer.astro";
import Navbar from "@components/Navbar.astro";
import MobileTOC from "@components/widgets/MobileTOC.astro";
import Banner from "../components/Banner.astro";
import Giscus from "@components/Giscus.astro"; // 评论组件

const {
  title,
  image,
  description = SITE_DESCRIPTION,
  headings = [],
  showTOC = false,
  isIndexed = true,
  isPost = false,
} = Astro.props;
---

<!doctype html>
<html lang={SITE_LANGUAGE} class="bg-white dark:bg-gray-900" data-theme={SITE_THEME.light} data-theme-type="light">
  <head>
    <ClientRouter />
    <ElementCrossing />
    <PointerOnNavigation />
    <Header title={title} description={description} favicon={SITE_FAVICON} image={image} />
    <title>{title ? title + " - " + SITE_TAB : SITE_TAB}</title>

    <!-- 主题初始化 -->
    <script define:vars={{ SITE_THEME }} is:inline>
      (function () {
        const storedTheme = localStorage.getItem("theme");
        const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
        let theme;
        if (storedTheme) {
          theme = storedTheme;
        } else {
          theme = prefersDark ? SITE_THEME.dark : SITE_THEME.light;
          localStorage.setItem("theme", theme);
        }
        document.documentElement.setAttribute("data-theme", theme);
        const themeType = theme === SITE_THEME.dark ? "dark" : "light";
        document.documentElement.setAttribute("data-theme-type", themeType);

        window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
          if (!localStorage.getItem("theme")) {
            const newTheme = e.matches ? SITE_THEME.dark : SITE_THEME.light;
            document.documentElement.setAttribute("data-theme", newTheme);
            document.documentElement.setAttribute("data-theme-type", e.matches ? "dark" : "light");
            localStorage.setItem("theme", newTheme);
          }
        });
      })();
    </script>
  </head>

  <body class="flex flex-col min-h-screen" {...isIndexed ? { "data-pagefind-body": true } : {}}>
    <!-- 顶部导航栏 -->
    <Navbar />

    <!-- Banner -->
    <div class="relative h-[70vh] md:h-[90vh] w-full">
      <Banner
        src="https://pic1.imgdb.cn/item/68d67d17c5157e1a88385aa2.jpg"
        alt="博客头图"
        title="Shepherd's Blog"
        subtitle="C'est mon Panache!"
        class="h-full w-full object-cover"
      />
      <!-- 暗色渐变覆盖层 -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/40 via-black/20 to-transparent"></div>
      <!-- 渐变过渡到主体 -->
      <div
        class="absolute bottom-0 left-0 right-0 h-80 bg-gradient-to-t from-white dark:from-gray-900 via-white/70 dark:via-gray-900/70 to-transparent z-10"
      >
      </div>
    </div>

    <!-- 主体内容 -->
    <div class="relative max-w-7xl mx-auto w-full -mt-40 z-20 px-4">
      <div
        class="bg-white/80 dark:bg-gray-800/60 backdrop-blur-xl rounded-2xl p-6 md:p-12 shadow-xl dark:shadow-gray-900/50"
      >
        <div class="grid grid-cols-1 md:grid-cols-6 lg:grid-cols-5 gap-6 lg:gap-8">
          <!-- 主内容 -->
          <main class="col-span-1 md:col-span-5 lg:col-span-4 flex flex-col gap-6 prose prose-lg dark:prose-invert">
            <slot />
            {isPost && <Giscus />}
          </main>

          <!-- 侧边栏 -->
          <aside class="col-span-1 lg:sticky lg:top-24 space-y-6">
            <Sidebar headings={headings} showTOC={showTOC} />
            <slot name="sidebar" />
          </aside>
        </div>
      </div>
      <Footer />
    </div>

    <!-- 移动端 TOC -->
    <MobileTOC headings={headings} showTOC={showTOC} />

    <!-- 主题同步 -->
    <script define:vars={{ SITE_THEME }} is:inline>
      document.addEventListener("astro:after-swap", () => {
        const storedTheme = localStorage.getItem("theme");
        if (storedTheme) {
          document.documentElement.setAttribute("data-theme", storedTheme);
          document.documentElement.setAttribute("data-theme-type", storedTheme === SITE_THEME.dark ? "dark" : "light");
        }
      });
    </script>

    <!-- 代码复制按钮 -->
    <script is:inline>
      document.addEventListener("astro:page-load", () => {
        document.querySelectorAll(".btn-copy").forEach((button) => {
          button.addEventListener("click", async () => {
            const codeBlock = button.closest(".frosti-code");
            const code = codeBlock.querySelector("code").textContent;
            const copyIcon = button.querySelector(".frosti-code-toolbar-copy-icon");
            const successIcon = button.querySelector(".frosti-code-toolbar-copy-success");
            try {
              await navigator.clipboard.writeText(code);
              copyIcon.classList.add("hidden");
              successIcon.classList.remove("hidden");
              button.classList.add("copy-success");
              setTimeout(() => {
                copyIcon.classList.remove("hidden");
                successIcon.classList.add("hidden");
                button.classList.remove("copy-success");
              }, 2000);
            } catch (err) {
              console.error("Failed to copy:", err);
            }
          });
        });
      });
    </script>

    <style is:inline>
      .btn-copy {
        position: relative;
        overflow: hidden;
      }
      .copy-success {
        animation: pulse 0.5s ease-in-out;
      }
      .frosti-code-toolbar-copy-success svg {
        color: #10b981;
      }
      @keyframes pulse {
        0% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.1);
        }
        100% {
          transform: scale(1);
        }
      }
    </style>
  </body>
</html>
