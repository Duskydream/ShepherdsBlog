import { c as createAstro, a as createComponent, r as renderComponent, e as renderScript, b as renderTemplate, m as maybeRenderHead, d as addAttribute, F as Fragment } from './astro/server_BSSrx8qw.mjs';
import { a as $$Icon } from './BaseLayout_KMbkoCGG.mjs';

const $$Astro = createAstro("https://duskydream.icu");
const $$GitHubStats = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$GitHubStats;
  const { username, repositoryName, showCommitGraph = false } = Astro2.props;
  const repoUrl = repositoryName ? `https://github.com/${username}/${repositoryName}` : `https://github.com/${username}`;
  return renderTemplate`${renderComponent($$result, "github-stats", "github-stats", { "class": "card bg-base-100 shadow-md border border-base-200 overflow-hidden mb-6", "data-username": username, "data-repo": repositoryName, "data-show-graph": showCommitGraph ? "true" : "false" }, { "default": () => renderTemplate` ${maybeRenderHead()}<div class="card-body p-4 md:p-6"> <div class="flex flex-col sm:flex-row justify-between items-center gap-4 mb-5"> <div class="flex items-center gap-3"> <div class="avatar"> <div class="w-12 h-12 rounded-full ring-2 ring-primary ring-offset-base-100 ring-offset-1"> <img${addAttribute(`https://github.com/${username}.png`, "src")}${addAttribute(username, "alt")} width="48" height="48" loading="lazy" class="gh-avatar"> </div> </div> <div> <h2 class="text-lg font-bold flex items-center flex-wrap gap-x-1"> <span class="gh-user"> ${renderComponent($$result, "Icon", $$Icon, { "name": "lucide:github", "class": "w-5 h-5 inline-block" })} <span>${username}</span> </span> ${repositoryName && renderTemplate`<span class="text-base-content/60">/</span>`} ${repositoryName && renderTemplate`<span class="text-primary gh-repo">${repositoryName}</span>`} </h2> <p class="text-sm opacity-75 gh-description"> <span class="loading loading-dots loading-xs"></span> Loading...
</p> </div> </div> ${repositoryName && renderTemplate`${renderComponent($$result, "Fragment", Fragment, {}, { "default": async ($$result2) => renderTemplate` <div class="badge badge-outline gh-license max-w-[120px] truncate whitespace-nowrap"> ${renderComponent($$result2, "Icon", $$Icon, { "name": "lucide:scale", "class": "w-3 h-3 mr-1 flex-shrink-0" })} <span class="truncate overflow-hidden">License</span> </div> ` })}`} </div> <div class="grid grid-cols-3 gap-3 mb-4"> <div class="flex flex-col items-center bg-base-200/70 rounded-lg p-3"> ${renderComponent($$result, "Icon", $$Icon, { "name": "lucide:star", "class": "w-6 h-6 text-yellow-500 mb-1" })} <span class="text-lg font-bold gh-stars"> <span class="loading loading-spinner loading-sm"></span> </span> <span class="text-xs">Stars</span> </div> <div class="flex flex-col items-center bg-base-200/70 rounded-lg p-3"> ${renderComponent($$result, "Icon", $$Icon, { "name": "lucide:git-fork", "class": "w-6 h-6 text-primary mb-1" })} <span class="text-lg font-bold gh-forks"> <span class="loading loading-spinner loading-sm"></span> </span> <span class="text-xs"> ${repositoryName ? "Forks" : "Repos"} </span> </div> <div class="flex flex-col items-center bg-base-200/70 rounded-lg p-3"> ${renderComponent($$result, "Icon", $$Icon, { "name": repositoryName ? "lucide:eye" : "lucide:users", "class": "w-6 h-6 text-secondary mb-1" })} <span class="text-lg font-bold gh-watchers"> <span class="loading loading-spinner loading-sm"></span> </span> <span class="text-xs"> ${repositoryName ? "Watchers" : "Followers"} </span> </div> </div> ${repositoryName && renderTemplate`<div class="flex flex-wrap gap-4 text-xs text-base-content/70 mb-4"> <div class="flex items-center gap-1"> ${renderComponent($$result, "Icon", $$Icon, { "name": "lucide:calendar", "class": "w-4 h-4" })} <span class="gh-created">
Created: <span class="loading loading-spinner loading-xs"></span> </span> </div> <div class="flex items-center gap-1"> ${renderComponent($$result, "Icon", $$Icon, { "name": "lucide:clock", "class": "w-4 h-4" })} <span class="gh-updated">
Updated: <span class="loading loading-spinner loading-xs"></span> </span> </div> <div class="flex items-center gap-1"> ${renderComponent($$result, "Icon", $$Icon, { "name": "lucide:git-branch", "class": "w-4 h-4" })} <span class="gh-branch">
Default: <span class="loading loading-spinner loading-xs"></span> </span> </div> </div>`} ${showCommitGraph && repositoryName && renderTemplate`<div class="commit-graph-section mb-4 gh-commit-graph"> <h3 class="text-sm font-semibold mb-2 flex items-center gap-1 opacity-80"> ${renderComponent($$result, "Icon", $$Icon, { "name": "lucide:activity", "class": "w-4 h-4" })} <span>Commit Activity</span> </h3> <div class="bg-base-200 p-3 rounded-lg"> <div class="grid grid-cols-7 gap-1"> ${Array(7 * 8).fill(0).map((_) => renderTemplate`<div class="w-3 h-3 rounded-sm skeleton"></div>`)} </div> </div> </div>`} <div class="card-actions justify-end mt-2"> <a${addAttribute(repoUrl, "href")} target="_blank" rel="noopener" class="btn btn-primary btn-sm gap-2"> ${renderComponent($$result, "Icon", $$Icon, { "name": "lucide:github", "class": "w-4 h-4" })}
View on GitHub
</a> </div> </div> ` })} ${renderScript($$result, "F:/Frosti/src/components/mdx/GitHubStats.astro?astro&type=script&index=0&lang.ts")}`;
}, "F:/Frosti/src/components/mdx/GitHubStats.astro", void 0);

export { $$GitHubStats as $ };
